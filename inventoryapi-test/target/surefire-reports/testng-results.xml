<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="21" passed="21">
  <reporter-output>
    <line>
      <![CDATA[Request Parameters : {shopURL=[shop-A], baseSkus=[product-baseSku-C, product-baseSku-B, product-baseSku-A], marketplaceIdentifier=[es]}]]>
    </line>
    <line>
      <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=product-baseSku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-B,variants=[Variants [sku=product-sku-B-1,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=product-sku-B-2,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
    </line>
    <line>
      <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=product-baseSku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-B,variants=[Variants [sku=product-sku-B-1,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=product-sku-B-2,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
    </line>
    <line>
      <![CDATA[Request Parameters : {shopURL=[shop-A], baseSkus=[product-baseSku-Y, product-baseSku-X], marketplaceIdentifier=[es]}]]>
    </line>
    <line>
      <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist,longMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
    </line>
    <line>
      <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist,longMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
    </line>
    <line>
      <![CDATA[Request Parameters : {shopURL=[shop-A], skus=[product-sku-Y, product-sku-X], marketplaceIdentifier=[es]}]]>
    </line>
    <line>
      <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-sku-X and product-sku-Y does not exist,longMessage=baseSku product-sku-X and product-sku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
    </line>
    <line>
      <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-sku-X and product-sku-Y does not exist,longMessage=baseSku product-sku-X and product-sku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
    </line>
    <line>
      <![CDATA[Request Parameters : {shopURL=[shop-A], skus=[product-Sku-A, product-Sku-B, product-Sku-C], marketplaceIdentifier=[es]}]]>
    </line>
    <line>
      <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-C,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=sku-B,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
    </line>
    <line>
      <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-C,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=sku-B,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
    </line>
    <line>
      <![CDATA[Request Parameters : {shopURL=[shop-A], baseSkus=[product-baseSku-C, product-baseSku-A], skus=[product-Sku-A, product-Sku-B, product-Sku-C], marketplaceIdentifier=[es]}]]>
    </line>
    <line>
      <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=801,shortMessage=baseSku and sku are not allowed,longMessage=both baseSku and sku are not allowed in request]],products=null,totalCount=0]]]>
    </line>
    <line>
      <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=801,shortMessage=baseSku and sku are not allowed,longMessage=both baseSku and sku are not allowed in request]],products=null,totalCount=0]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C1,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=0,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C2,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C3,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C4,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C5,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C6,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C7,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C8,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C9,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C10,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C11,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C13,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C14,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-15,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-16,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C17,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C18,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C19,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C20,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C21,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C22,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-23,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-24,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C25,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C26,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C27,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C28,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C29,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C30,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=null,operationId=b8Ze8400-e29b-31d4-a716-d4665f447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=null,operationId=b8Ze8400-e29b-31d4-a716-d4665f447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=e,shopUrl=shop-acd,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3scsesd,shopUrl=shop-acd,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447510,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447510,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=shop-acd,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid marketplaceId,longMessage=marketPlace Id can not contain special character]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447519,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid marketplaceId,longMessage=marketPlace Id can not contain special character]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447519,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=null,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=shop-acdertyuiopasdfghjklzxcvbnmpoiuytrewqasdfghjkl,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL lenght should be less than 50 characters]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL lenght should be less than 50 characters]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : null]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid field,longMessage=shop URL should be in lowercase]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid field,longMessage=shop URL should be in lowercase]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=null,shopUrl=shop-ACD,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=marketPlaceid is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=marketPlaceid is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=shop-ACD,inventory=null]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=inventory is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255947629,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=inventory is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255947629,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-a,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-b=Inventory [quantity=1000000000,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=991,shortMessage=inventory per shop is more than allowed,longMessage=inventory per shop is more than allowed  for shop-abc]],operationId=s50e8520-e29c-74-a816-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=991,shortMessage=inventory per shop is more than allowed,longMessage=inventory per shop is more than allowed  for shop-abc]],operationId=s50e8520-e29c-74-a816-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c1,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=0,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c2,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c3,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c4,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c5,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c6,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c7,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c8,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c9,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c10,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c11,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c13,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c14,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-15,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-16,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c17,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c18,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c19,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c20,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c21,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c22,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-23,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-24,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c25,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c26,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c27,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c28,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c29,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c30,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c31,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=919,shortMessage=request exceeds allowed max shop ,longMessage=request conatins update for more than 30 shops]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=919,shortMessage=request exceeds allowed max shop ,longMessage=request conatins update for more than 30 shops]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-a,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-b=Inventory [quantity=1000000000,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=0,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-d,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=909,shortMessage=quantity is not specified for product sku sku-A ,longMessage=quantity is not specified for product sku sku-A  in the shopURL shop C of marketplace es]],operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=909,shortMessage=quantity is not specified for product sku sku-A ,longMessage=quantity is not specified for product sku sku-A  in the shopURL shop C of marketplace es]],operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-A,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-b,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=null,operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=null,operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-a,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-b=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
    </line>
    <line>
      <![CDATA[Actual Request UpdateInventoryResponse [errors=null,operationId=550e8400-e29b-41d4-a716-446655440000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
    <line>
      <![CDATA[Expected  Request UpdateInventoryResponse [errors=null,operationId=550e8400-e29b-41d4-a716-446655440000,operationStatus=Submitted,operationType=UpdateInventory]]]>
    </line>
  </reporter-output>
  <suite name="Inventory API Test Suite" duration-ms="8449" started-at="2016-08-27T21:30:09Z" finished-at="2016-08-27T21:30:17Z">
    <groups>
      <group name="post">
        <method signature="UpdateInventoryAPITest.testForQuantityInGreaterThanAllowed(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForQuantityInGreaterThanAllowed" class="org.rakuten.test.UpdateInventoryAPITest"/>
      </group> <!-- post -->
      <group name="negative">
        <method signature="GetInventoryAPITest.testForNonExistingProductsForBaseSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForNonExistingProductsForBaseSkus" class="org.rakuten.test.GetInventoryAPITest"/>
        <method signature="GetInventoryAPITest.testForNonExistingProductsForSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForNonExistingProductsForSkus" class="org.rakuten.test.GetInventoryAPITest"/>
        <method signature="GetInventoryAPITest.testInvalidRequest(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testInvalidRequest" class="org.rakuten.test.GetInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" class="org.rakuten.test.UpdateInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testForMoreThan1000SkusPerShops(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForMoreThan1000SkusPerShops" class="org.rakuten.test.UpdateInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testForMoreThan30Shops(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForMoreThan30Shops" class="org.rakuten.test.UpdateInventoryAPITest"/>
      </group> <!-- negative -->
      <group name="positive">
        <method signature="GetInventoryAPITest.testForBaseSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForBaseSkus" class="org.rakuten.test.GetInventoryAPITest"/>
        <method signature="GetInventoryAPITest.testForSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForSkus" class="org.rakuten.test.GetInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testFor30Shops(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testFor30Shops" class="org.rakuten.test.UpdateInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testUpdatesForValidAndInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testUpdatesForValidAndInvalidRequest" class="org.rakuten.test.UpdateInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testValidUpdatesForMultipleShop(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testValidUpdatesForMultipleShop" class="org.rakuten.test.UpdateInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testValidUpdatesForSingleShop(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testValidUpdatesForSingleShop" class="org.rakuten.test.UpdateInventoryAPITest"/>
      </group> <!-- positive -->
      <group name="sanity">
        <method signature="GetInventoryAPITest.testForBaseSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForBaseSkus" class="org.rakuten.test.GetInventoryAPITest"/>
        <method signature="GetInventoryAPITest.testForSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForSkus" class="org.rakuten.test.GetInventoryAPITest"/>
        <method signature="UpdateInventoryAPITest.testValidUpdatesForSingleShop(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testValidUpdatesForSingleShop" class="org.rakuten.test.UpdateInventoryAPITest"/>
      </group> <!-- sanity -->
    </groups>
    <test name="Get Api Test" duration-ms="6492" started-at="2016-08-27T21:30:09Z" finished-at="2016-08-27T21:30:15Z">
      <class name="org.rakuten.test.GetInventoryAPITest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="beforeClass" is-config="true" duration-ms="2817" started-at="2016-08-28T03:00:09Z" finished-at="2016-08-28T03:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testForBaseSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForBaseSkus" duration-ms="2843" started-at="2016-08-28T03:00:12Z" description="This method will if getInventory api contain baseSkus in query string" data-provider="getDataForBaseSkus" finished-at="2016-08-28T03:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request Parameters : {shopURL=[shop-A], baseSkus=[product-baseSku-C, product-baseSku-B, product-baseSku-A], marketplaceIdentifier=[es]}]]>
            </line>
            <line>
              <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=product-baseSku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-B,variants=[Variants [sku=product-sku-B-1,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=product-sku-B-2,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
            </line>
            <line>
              <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=product-baseSku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-B,variants=[Variants [sku=product-sku-B-1,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=product-sku-B-2,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForBaseSkus -->
        <test-method status="PASS" signature="testForNonExistingProductsForBaseSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForNonExistingProductsForBaseSkus" duration-ms="136" started-at="2016-08-28T03:00:15Z" description="This method will pass baseSku parameters for which productds do not exists" data-provider="getDataNonExistingProductsForBaseSku" finished-at="2016-08-28T03:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request Parameters : {shopURL=[shop-A], baseSkus=[product-baseSku-Y, product-baseSku-X], marketplaceIdentifier=[es]}]]>
            </line>
            <line>
              <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist,longMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
            </line>
            <line>
              <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist,longMessage=baseSku product-baseSku-X and product-baseSku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForNonExistingProductsForBaseSkus -->
        <test-method status="PASS" signature="testForNonExistingProductsForSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForNonExistingProductsForSkus" duration-ms="138" started-at="2016-08-28T03:00:15Z" description="This method will pass skus parameters for which productds do not exists" data-provider="getDataNonExistingProductsForSku" finished-at="2016-08-28T03:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request Parameters : {shopURL=[shop-A], skus=[product-sku-Y, product-sku-X], marketplaceIdentifier=[es]}]]>
            </line>
            <line>
              <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-sku-X and product-sku-Y does not exist,longMessage=baseSku product-sku-X and product-sku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
            </line>
            <line>
              <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-sku-X and product-sku-Y does not exist,longMessage=baseSku product-sku-X and product-sku-Y does not exist in the shopURL shop  A of marketplace es]],products=null,totalCount=0]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForNonExistingProductsForSkus -->
        <test-method status="PASS" signature="testForSkus(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testForSkus" duration-ms="169" started-at="2016-08-28T03:00:15Z" description="This method will if getInventory api contain skus in query string" data-provider="getDataForSkus" finished-at="2016-08-28T03:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request Parameters : {shopURL=[shop-A], skus=[product-Sku-A, product-Sku-B, product-Sku-C], marketplaceIdentifier=[es]}]]>
            </line>
            <line>
              <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-C,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=sku-B,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
            </line>
            <line>
              <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=901,shortMessage=baseSku product-baseSku-C does not exist,longMessage=baseSku product-baseSku-C does not exist in the shopURL shop  A of marketplace es]],products=[Products [baseSku=product-baseSku-A,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]], Products [baseSku=product-baseSku-C,variants=[Variants [sku=sku-A,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]], Variants [sku=sku-B,variantListedShops=[VariantListedShops [marketPlaceIdentifier=es,shopUrl=shop-A,inventory=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true]]]]]]],totalCount=2]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForSkus -->
        <test-method status="PASS" signature="testInvalidRequest(int)[pri:0, instance:org.rakuten.test.GetInventoryAPITest@179b4058]" name="testInvalidRequest" duration-ms="317" started-at="2016-08-28T03:00:15Z" description="This method will pass parameters which make request invalid" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request Parameters : {shopURL=[shop-A], baseSkus=[product-baseSku-C, product-baseSku-A], skus=[product-Sku-A, product-Sku-B, product-Sku-C], marketplaceIdentifier=[es]}]]>
            </line>
            <line>
              <![CDATA[Actual Response : GetInventoryResponse [errors=[Errors [errorCode=801,shortMessage=baseSku and sku are not allowed,longMessage=both baseSku and sku are not allowed in request]],products=null,totalCount=0]]]>
            </line>
            <line>
              <![CDATA[Expected Response : GetInventoryResponse [errors=[Errors [errorCode=801,shortMessage=baseSku and sku are not allowed,longMessage=both baseSku and sku are not allowed in request]],products=null,totalCount=0]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testInvalidRequest -->
      </class> <!-- org.rakuten.test.GetInventoryAPITest -->
    </test> <!-- Get Api Test -->
    <test name="Update API Test" duration-ms="1924" started-at="2016-08-27T21:30:15Z" finished-at="2016-08-27T21:30:17Z">
      <class name="org.rakuten.test.UpdateInventoryAPITest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="beforeSuite" is-config="true" duration-ms="5936" started-at="2016-08-28T03:00:03Z" finished-at="2016-08-28T03:00:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="BeforeTest" is-config="true" duration-ms="154" started-at="2016-08-28T03:00:15Z" finished-at="2016-08-28T03:00:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="testFor30Shops(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testFor30Shops" duration-ms="307" started-at="2016-08-28T03:00:15Z" description="This method will pass update request for exact 30 shops, api should give be successful" data-provider="getDataFor30Shops" finished-at="2016-08-28T03:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C1,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=0,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C2,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C3,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C4,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C5,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C6,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C7,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C8,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C9,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C10,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C11,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C13,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C14,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-15,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-16,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C17,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C18,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C19,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C20,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C21,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C22,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-23,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-24,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C25,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C26,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C27,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C28,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C29,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-C30,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=null,operationId=b8Ze8400-e29b-31d4-a716-d4665f447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=null,operationId=b8Ze8400-e29b-31d4-a716-d4665f447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testFor30Shops -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="137" started-at="2016-08-28T03:00:16Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=e,shopUrl=shop-acd,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="115" started-at="2016-08-28T03:00:16Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3scsesd,shopUrl=shop-acd,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447510,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=929,shortMessage=invalid marketplaceId,longMessage=marketPlace Id length should be between 2-10]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447510,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="81" started-at="2016-08-28T03:00:16Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=shop-acd,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid marketplaceId,longMessage=marketPlace Id can not contain special character]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447519,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid marketplaceId,longMessage=marketPlace Id can not contain special character]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447519,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="100" started-at="2016-08-28T03:00:16Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=null,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="99" started-at="2016-08-28T03:00:16Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=shop-acdertyuiopasdfghjklzxcvbnmpoiuytrewqasdfghjkl,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL lenght should be less than 50 characters]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=shop URL lenght should be less than 50 characters]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="104" started-at="2016-08-28T03:00:16Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : null]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid field,longMessage=shop URL should be in lowercase]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=invalid field,longMessage=shop URL should be in lowercase]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="85" started-at="2016-08-28T03:00:16Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=null,shopUrl=shop-ACD,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-CXB=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=marketPlaceid is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=marketPlaceid is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447529,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="98" started-at="2016-08-28T03:00:17Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ebwrtd3-csesd,shopUrl=shop-ACD,inventory=null]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=inventory is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255947629,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=930,shortMessage=mandatory field missing,longMessage=inventory is missing and its mandatory field]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255947629,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForInvalidRequest" duration-ms="71" started-at="2016-08-28T03:00:17Z" description="This method will pass update request which is invalid according to validation rule" data-provider="getDataForInvalidRequest" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-a,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-b=Inventory [quantity=1000000000,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForInvalidRequest -->
        <test-method status="PASS" signature="testForMoreThan1000SkusPerShops(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForMoreThan1000SkusPerShops" duration-ms="154" started-at="2016-08-28T03:00:17Z" description="This method will pass update request for more than 1000 uniq skus for a shops" data-provider="getDataForMoreThan1000SkusPerShops" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=ge,shopUrl=shop-abc,inventory={sku-123=Inventory [quantity=10,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=991,shortMessage=inventory per shop is more than allowed,longMessage=inventory per shop is more than allowed  for shop-abc]],operationId=s50e8520-e29c-74-a816-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=991,shortMessage=inventory per shop is more than allowed,longMessage=inventory per shop is more than allowed  for shop-abc]],operationId=s50e8520-e29c-74-a816-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForMoreThan1000SkusPerShops -->
        <test-method status="PASS" signature="testForMoreThan30Shops(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForMoreThan30Shops" duration-ms="115" started-at="2016-08-28T03:00:17Z" description="This method will pass update request for more than 30 shops, api should give error" data-provider="getDataForMoreThan30Shops" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c1,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=0,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c2,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c3,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c4,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c5,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c6,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c7,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c8,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c9,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c10,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c11,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c13,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c14,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-15,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-16,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c17,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c18,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c19,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c20,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c21,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c22,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-23,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-24,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c25,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c26,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c27,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c12,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c28,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c29,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c30,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c31,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=919,shortMessage=request exceeds allowed max shop ,longMessage=request conatins update for more than 30 shops]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=919,shortMessage=request exceeds allowed max shop ,longMessage=request conatins update for more than 30 shops]],operationId=a5Ze84B0-e29b-41c4-a716-4A6255447509,operationStatus=Failed,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForMoreThan30Shops -->
        <test-method status="PASS" signature="testForQuantityInGreaterThanAllowed(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testForQuantityInGreaterThanAllowed" duration-ms="64" started-at="2016-08-28T03:00:17Z" description="This method will pass update request which contain quantity of some sku in range and for some sku out of range" data-provider="getDataForQuantityInGreaterThanAllowed" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-a,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-b=Inventory [quantity=1000000000,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=901,shortMessage=quantity is greater than allowed limit for sku sku-b,longMessage=quantity is greater than allowed limit for sku sku-b]],operationId=s50e8520-e29b-74-a716-446655440345000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testForQuantityInGreaterThanAllowed -->
        <test-method status="PASS" signature="testUpdatesForValidAndInvalidRequest(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testUpdatesForValidAndInvalidRequest" duration-ms="63" started-at="2016-08-28T03:00:17Z" description="This method will pass update request for multiple shops in which some are valid and some or invalid" data-provider="getDataForValidAndInvalidRequest" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-c,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=0,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-d,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=[Errors [errorCode=909,shortMessage=quantity is not specified for product sku sku-A ,longMessage=quantity is not specified for product sku sku-A  in the shopURL shop C of marketplace es]],operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=[Errors [errorCode=909,shortMessage=quantity is not specified for product sku sku-A ,longMessage=quantity is not specified for product sku sku-A  in the shopURL shop C of marketplace es]],operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testUpdatesForValidAndInvalidRequest -->
        <test-method status="PASS" signature="testValidUpdatesForMultipleShop(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testValidUpdatesForMultipleShop" duration-ms="70" started-at="2016-08-28T03:00:17Z" description="This method will pass update request for multiple shops in a request" data-provider="getDataForValidUpdatesForMultipleShop" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-A,inventory={sku-A=Inventory [quantity=100,returnProductsToInventoryOnCancelOrder=true], sku-B=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}], ShopInventory [marketplaceIdentifier=es,shopUrl=shop-b,inventory={sku-C=Inventory [quantity=200,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=null,operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=null,operationId=a5Ze8400-e29b-41d4-a716-446655447009,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidUpdatesForMultipleShop -->
        <test-method status="PASS" signature="testValidUpdatesForSingleShop(int)[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="testValidUpdatesForSingleShop" duration-ms="67" started-at="2016-08-28T03:00:17Z" description="This method will pass update request for only one shop in a request" data-provider="getDataForValidUpdatesForSingleShop" finished-at="2016-08-28T03:00:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Request : UpdateInventoryRequest [shopInventory=[ShopInventory [marketplaceIdentifier=es,shopUrl=shop-a,inventory={sku-A=Inventory [quantity=-1,returnProductsToInventoryOnCancelOrder=true], sku-b=Inventory [quantity=110,returnProductsToInventoryOnCancelOrder=false]}]]]]]>
            </line>
            <line>
              <![CDATA[Actual Request UpdateInventoryResponse [errors=null,operationId=550e8400-e29b-41d4-a716-446655440000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
            <line>
              <![CDATA[Expected  Request UpdateInventoryResponse [errors=null,operationId=550e8400-e29b-41d4-a716-446655440000,operationStatus=Submitted,operationType=UpdateInventory]]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidUpdatesForSingleShop -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:org.rakuten.test.UpdateInventoryAPITest@46346072]" name="afterSuite" is-config="true" duration-ms="200" started-at="2016-08-28T03:00:17Z" finished-at="2016-08-28T03:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- org.rakuten.test.UpdateInventoryAPITest -->
    </test> <!-- Update API Test -->
  </suite> <!-- Inventory API Test Suite -->
</testng-results>
